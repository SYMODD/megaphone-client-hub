
import { useCallback } from "react";
import { useAuth } from "@/contexts/AuthContext";
import { toast } from "sonner";

interface UseClientUpdateProps {
  fetchClients: () => Promise<void>;
  setViewDialogOpen: (open: boolean) => void;
  setEditDialogOpen: (open: boolean) => void;
  setDocumentDialogOpen: (open: boolean) => void;
}

export const useClientUpdate = ({
  fetchClients,
  setViewDialogOpen,
  setEditDialogOpen,
  setDocumentDialogOpen
}: UseClientUpdateProps) => {
  const { user } = useAuth();

  const handleClientUpdated = useCallback(async () => {
    console.log("üîÑ BaseClientsLogic - Client mis √† jour, rafra√Æchissement forc√©...");
    
    try {
      // Forcer le rechargement des donn√©es depuis Supabase IMM√âDIATEMENT
      if (user) {
        // Attendre explicitement que fetchClients soit termin√© avec await
        await fetchClients();
        console.log("‚úÖ BaseClientsLogic - Donn√©es rafra√Æchies apr√®s mise √† jour client");
        
        // Notification de succ√®s
        toast.success("Donn√©es client mises √† jour avec succ√®s");
      }
      
      // Fermer les dialogues APR√àS le rechargement
      setViewDialogOpen(false);
      setEditDialogOpen(false);
      setDocumentDialogOpen(false);
    } catch (error) {
      console.error("‚ùå Erreur lors du rafra√Æchissement des donn√©es:", error);
      toast.error("Erreur lors du rafra√Æchissement des donn√©es");
    }
  }, [fetchClients, user, setViewDialogOpen, setEditDialogOpen, setDocumentDialogOpen]);

  return { handleClientUpdated };
};
