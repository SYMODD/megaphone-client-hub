
import { supabase } from "@/integrations/supabase/client";
import { toast } from "sonner";
import { useImageUpload } from "@/hooks/useImageUpload";

export const useOCRScanning = () => {
  const { uploadBarcodeImage } = useImageUpload();

  const scanForBarcodeAndPhone = async (
    file: File, 
    onBarcodeScanned: (barcode: string, phone?: string, barcodeImageUrl?: string) => void
  ) => {
    try {
      console.log("üîç OCR SCANNING - D√©but scan pour code-barres et t√©l√©phone");

      // 1. Upload l'image vers barcode-images en premier
      console.log("üì§ Upload vers BARCODE-IMAGES bucket...");
      const barcodeImageUrl = await uploadBarcodeImage(file);
      
      if (!barcodeImageUrl) {
        console.error("‚ùå √âchec upload image code-barres");
        toast.error("Erreur lors de l'upload de l'image");
        onBarcodeScanned("", "", "");
        return;
      }

      console.log("‚úÖ Image upload√©e avec succ√®s:", barcodeImageUrl);

      // 2. Appeler l'API OCR pour extraire les donn√©es
      const formData = new FormData();
      formData.append('image', file);

      console.log("üîç Appel API OCR pour extraction...");
      
      const { data, error } = await supabase.functions.invoke('ocr-processing', {
        body: formData,
      });

      if (error) {
        console.error("‚ùå Erreur API OCR:", error);
        toast.error("Erreur lors du traitement OCR");
        // M√™me en cas d'erreur OCR, on transmet l'URL de l'image
        onBarcodeScanned("", "", barcodeImageUrl);
        return;
      }

      console.log("üìä R√©sultat OCR re√ßu:", data);

      // 3. Extraire le code-barres et t√©l√©phone des r√©sultats OCR
      let extractedBarcode = "";
      let extractedPhone = "";

      if (data?.barcode) {
        extractedBarcode = data.barcode;
        console.log("‚úÖ Code-barres extrait:", extractedBarcode);
      }

      if (data?.phone) {
        extractedPhone = data.phone;
        console.log("‚úÖ T√©l√©phone extrait:", extractedPhone);
      }

      // 4. Transmettre TOUTES les donn√©es including l'URL
      console.log("üéØ TRANSMISSION FINALE - Donn√©es compl√®tes:", {
        barcode: extractedBarcode,
        phone: extractedPhone,
        imageUrl: barcodeImageUrl,
        confirmation: "Toutes les donn√©es transmises"
      });

      onBarcodeScanned(extractedBarcode, extractedPhone, barcodeImageUrl);
      
      if (extractedBarcode || extractedPhone) {
        toast.success("Donn√©es extraites avec succ√®s !");
      } else {
        toast.info("Image upload√©e, mais aucune donn√©e d√©tect√©e");
      }

    } catch (error) {
      console.error("‚ùå Erreur inattendue OCR scanning:", error);
      toast.error("Erreur lors du scan");
      onBarcodeScanned("", "", "");
    }
  };

  return {
    scanForBarcodeAndPhone
  };
};
