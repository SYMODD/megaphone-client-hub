
import { useMemo } from "react";
import { ClientData } from "@/types/agentDataTypes";

export const useAgentFiltering = (clients: any[], profile: any) => {
  // Les clients sont d√©j√† filtr√©s par la base de donn√©es, pas besoin de filtrage c√¥t√© client
  const filteredClients = useMemo(() => {
    if (!profile) return [];

    // Les agents n'ont acc√®s √† aucun client
    if (profile.role === "agent") {
      console.log("üë§ Agent - Aucun acc√®s aux clients");
      return [];
    }

    console.log("üìä Clients depuis la base de donn√©es (d√©j√† filtr√©s):", clients.length);
    return clients;
  }, [clients, profile?.role]);

  // Clients r√©cents bas√©s sur les donn√©es filtr√©es
  const recentClients = useMemo(() => {
    return clients
      .sort((a, b) => new Date(b.created_at).getTime() - new Date(a.created_at).getTime())
      .slice(0, 5)
      .map(client => ({
        id: client.id,
        nom: client.nom,
        prenom: client.prenom,
        nationalite: client.nationalite,
        dateEnregistrement: client.date_enregistrement,
        pointOperation: client.point_operation || "Non d√©fini",
        numeroPasseport: client.numero_passeport || "Non sp√©cifi√©"
      } as ClientData));
  }, [clients]);

  return {
    filteredClients,
    recentClients
  };
};
